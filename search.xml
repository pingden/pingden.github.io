<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GPS参数提取及轨迹重现</title>
      <link href="/archives/5bb786c7.html"/>
      <url>/archives/5bb786c7.html</url>
      
        <content type="html"><![CDATA[<h1 id="GPS参数提取及轨迹重现"><a href="#GPS参数提取及轨迹重现" class="headerlink" title="GPS参数提取及轨迹重现"></a>GPS参数提取及轨迹重现</h1><blockquote><p>本项目分为两个版本：</p><p>​    1、基于百度地图API的轨迹快速重现，项目体验地址：<a href="https://pingden.github.io/GPS/GPS_Baidu/">GPS轨迹重现在线版</a></p><p>​    2、基于Leaflet的状态及轨迹重现，项目体验地址：<a href="https://pingden.github.io/GPS/GPS_Leaflet/">GPS数据提取及轨迹重现</a></p><p>两者均采用在线地图，都需要Internet的支持</p></blockquote><h2 id="1、基于百度地图API的轨迹快速重现"><a href="#1、基于百度地图API的轨迹快速重现" class="headerlink" title="1、基于百度地图API的轨迹快速重现"></a>1、基于百度地图API的轨迹快速重现</h2><h3 id="1-1、功能简介"><a href="#1-1、功能简介" class="headerlink" title="1.1、功能简介"></a>1.1、功能简介</h3><ul><li>数据提取：提取出GPS文件中的坐标信息</li><li>坐标转换：原始坐标转化成百度坐标</li><li>轨迹描绘：根据提取出来的坐标信息将轨迹一次性描绘出来</li><li>支持地图的放大与缩小</li></ul><h3 id="1-2、效果展示"><a href="#1-2、效果展示" class="headerlink" title="1.2、效果展示"></a>1.2、效果展示</h3><p><img src="https://cdn.jsdelivr.net/gh/pingden/mypic/img/GPS_fast%2000_00_00-00_00_301.gif" alt="GPS_fast 00_00_00-00_00_30~1"></p><h3 id="1-3、项目实现"><a href="#1-3、项目实现" class="headerlink" title="1.3、项目实现"></a>1.3、项目实现</h3><h4 id="1-3-1、准备"><a href="#1-3-1、准备" class="headerlink" title="1.3.1、准备"></a>1.3.1、准备</h4><ul><li>这里需要<strong>注意</strong>的是，api是用JavaScript写的，所以需要懂一点前端（HTML+CSS+Javascript）的知识，不难。</li></ul><blockquote><p>首先，因为需要用到百度地图API，所以先要到官网申请一个ak，<a href="https://lbsyun.baidu.com/">百度地图开放平台</a>，具体操作可以参考<a href="https://blog.csdn.net/lidan724/article/details/105541544?ops_request_misc=%7B%22request_id%22:%22163859765316780271930714%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163859765316780271930714&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-105541544.pc_search_result_cache&utm_term=%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEAPI%E4%BD%BF%E7%94%A8&spm=1018.2226.3001.4187">百度地图API及使用</a>，之后就可以在本地新建一个html文件，在官网上复制一个例程保存到改文件中并更改ak，然后就可以使用百度API了，写好代码后双击就可以在浏览器中看到运行效果。</p></blockquote><h4 id="1-3-2、实现"><a href="#1-3-2、实现" class="headerlink" title="1.3.2、实现"></a>1.3.2、实现</h4><ul><li>完成了上述准备之后就可以开始实现项目了，js代码可以写在html文件中的script标签中，也可以写在js文件中然后通过script标签引入，具体可参考源码。</li></ul><blockquote><p>1、加载地图，这里我用的是API3.0，<a href="https://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference_3_0.html#a3b2">百度地图JSAPI 3.0类参考</a>，示例可以在这里找到<a href="https://lbsyun.baidu.com/index.php?title=jspopularGL"> 百度地图API SDK</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 百度地图API功能</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">&quot;allmap&quot;</span>);    <span class="comment">// 创建Map实例</span></span><br><span class="line">map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">104.0820</span>, <span class="number">30.63231</span>), <span class="number">17</span>);  <span class="comment">// 初始化地图,设置中心点坐标和地图级别</span></span><br><span class="line">map.enableScrollWheelZoom(<span class="literal">true</span>);     <span class="comment">//开启鼠标滚轮缩放</span></span><br><span class="line">map.setMapType(BMAP_SATELLITE_MAP);      <span class="comment">// 设置地图类型为地球模式</span></span><br></pre></td></tr></table></figure><blockquote><p>2、数据提取及轨迹描绘，数据提取是先读取文件并将内容保存到一个变量中，然后通过“$”符号进行分行处理，再根据‘，’进行分割处理并提取有效信息，详情见以下代码，关于GPS数据格式可参考<a href="https://blog.csdn.net/weixin_34240657/article/details/86304129?ops_request_misc=%7B%22request_id%22:%22163291920916780255269807%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163291920916780255269807&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-86304129.pc_search_result_control_group&utm_term=GPS%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96&spm=1018.2226.3001.4187">GPS数据读取与处理</a>。</p><p>至于轨迹描绘，本来我是直接用百度地图API进行轨迹状态重现的，也就是逐点描绘，但后来因为一些问题（卡、慢）没有解决就改用了Leaflet。这里我采用的是百度地图API提供的加载海量点的方法来实现轨迹的快速描绘，</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pointArr = [];</span><br><span class="line"><span class="keyword">var</span> infoArr = [];</span><br><span class="line"><span class="comment">//文件读取函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dealSelectFiles</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementById(<span class="string">&quot;selectFiles&quot;</span>).files[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();<span class="comment">//这是核心,读取操作就是由它完成.</span></span><br><span class="line">    reader.readAsText(file);<span class="comment">//读取文件的内容,也可以读取文件的URL</span></span><br><span class="line"></span><br><span class="line">    reader.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//当读取完成后回调这个函数,然后此时文件的内容存储到了result中,直接操作即可</span></span><br><span class="line">        <span class="keyword">var</span> arr = <span class="built_in">this</span>.result.split(<span class="string">&quot;$&quot;</span>);   <span class="comment">//数据分行处理</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line">        flag_timer = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> high;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(arr[i]!=<span class="literal">null</span> &amp;&amp; arr[i] != <span class="literal">undefined</span> &amp;&amp; arr[i] != <span class="string">&#x27;&#x27;</span>)&#123;                    </span><br><span class="line">            <span class="comment">//找到返回位置，未找到返回-1</span></span><br><span class="line">            <span class="keyword">if</span>(arr[i].indexOf(<span class="string">&#x27;GPGGA&#x27;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> info = arr[i].split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                high = info[<span class="number">9</span>] +<span class="string">&#x27; m&#x27;</span>;                       </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(arr[i].indexOf(<span class="string">&#x27;GPRMC&#x27;</span>) != -<span class="number">1</span> &amp;&amp; arr[i].indexOf(<span class="string">&#x27;V&#x27;</span>) == -<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> info_temp = &#123;</span><br><span class="line">                    <span class="attr">date</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">time</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">high</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">speed</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">direction</span>:<span class="literal">undefined</span></span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> info = arr[i].split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(info[<span class="number">2</span>] == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">                    final_lat = info[<span class="number">3</span>];</span><br><span class="line">                    final_lon = info[<span class="number">5</span>];</span><br><span class="line">                    my_translate(info[<span class="number">3</span>],info[<span class="number">5</span>]);</span><br><span class="line">                    sped = <span class="built_in">parseFloat</span>(info[<span class="number">7</span>]) * <span class="number">1.852</span>;   <span class="comment">//km/h = 海速*1.852</span></span><br><span class="line"></span><br><span class="line">                    info_temp.high = high;</span><br><span class="line">                    info_temp.speed = sped;</span><br><span class="line">                    info_temp.time = (<span class="built_in">parseInt</span>(info[<span class="number">1</span>].slice(<span class="number">0</span>,<span class="number">2</span>))+<span class="number">8</span>)%<span class="number">24</span>+<span class="string">&#x27;:&#x27;</span>+info[<span class="number">1</span>].slice(<span class="number">2</span>,<span class="number">4</span>)+<span class="string">&#x27;:&#x27;</span>+info[<span class="number">1</span>].slice(<span class="number">4</span>,<span class="number">6</span>);</span><br><span class="line">                    info_temp.date = info[<span class="number">9</span>].slice(<span class="number">4</span>,<span class="number">6</span>)+<span class="string">&#x27;年&#x27;</span>+info[<span class="number">9</span>].slice(<span class="number">2</span>,<span class="number">4</span>)+<span class="string">&#x27;月&#x27;</span>+info[<span class="number">9</span>].slice(<span class="number">0</span>,<span class="number">2</span>)+<span class="string">&#x27;日&#x27;</span>;</span><br><span class="line">                    info_temp.direction = info[<span class="number">8</span>]+<span class="string">&#x27;°&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    infoArr.push(info_temp);                           </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        alert(<span class="string">&#x27;数据处理完成&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 轨迹描绘</span></span><br><span class="line">        <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> len = pointArr.length; </span><br><span class="line">        <span class="keyword">var</span> points = [];</span><br><span class="line">        <span class="keyword">while</span>(index&lt;len)&#123;</span><br><span class="line">            <span class="keyword">var</span> temp = <span class="keyword">new</span> BMap.Point(pointArr[index].lon,pointArr[index].lat);</span><br><span class="line">            points.push(temp);   </span><br><span class="line">            index++;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">var</span> options = &#123;</span><br><span class="line">            <span class="attr">size</span>: BMAP_POINT_SIZE_SMALLER,</span><br><span class="line">            <span class="attr">shape</span>: BMAP_POINT_SHAPE_CIRCLE,</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#0000FF&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> pointCollection = <span class="keyword">new</span> BMap.PointCollection(points, options);  <span class="comment">// 初始化PointCollection</span></span><br><span class="line">        map.addOverlay(pointCollection);  <span class="comment">// 添加Overlay   </span></span><br><span class="line">        map.addOverlay(<span class="keyword">new</span> BMap.Marker(<span class="keyword">new</span> BMap.Point(pointArr[<span class="number">0</span>].lon,pointArr[<span class="number">0</span>].lat),&#123;<span class="attr">icon</span>: startIcon&#125;)); <span class="comment">//描起点</span></span><br><span class="line">        map.addOverlay(<span class="keyword">new</span> BMap.Marker(<span class="keyword">new</span> BMap.Point(pointArr[len-<span class="number">1</span>].lon,pointArr[len-<span class="number">1</span>].lat),&#123;<span class="attr">icon</span>: finalIcon&#125;)); <span class="comment">//描起点                            </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_translate</span>(<span class="params">lat,lon</span>)    </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//转换经度   dddmm.mmmm转ddd.dddd</span></span><br><span class="line">    <span class="keyword">var</span> d = lon.slice(<span class="number">0</span>,<span class="number">3</span>);      <span class="comment">//取出度</span></span><br><span class="line">    <span class="keyword">var</span> m = lon.slice(<span class="number">3</span>,<span class="number">10</span>);     <span class="comment">//取出分</span></span><br><span class="line">    m = m/<span class="number">60</span>;</span><br><span class="line">    lon = <span class="built_in">parseFloat</span>(d) + <span class="built_in">parseFloat</span>(m);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转换纬度   ddmm.mmmm转dd.dddd</span></span><br><span class="line">    d = lat.slice(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">    m = lat.slice(<span class="number">2</span>,<span class="number">9</span>);</span><br><span class="line">    m = m/<span class="number">60</span>;</span><br><span class="line">    lat = <span class="built_in">parseFloat</span>(d) + <span class="built_in">parseFloat</span>(m);    <span class="comment">//转成浮点型后计算</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> t1 = wgs2gcj(lat, lon);    <span class="comment">// 坐标转换</span></span><br><span class="line">    <span class="keyword">var</span> t2 = gcj2bd(t1[<span class="number">0</span>],t1[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> point_temp = &#123;</span><br><span class="line">        <span class="attr">lat</span>: t2[<span class="number">0</span>],</span><br><span class="line">        <span class="attr">lon</span>: t2[<span class="number">1</span>],</span><br><span class="line">    &#125;;</span><br><span class="line">    pointArr.push(point_temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>3、坐标转换，因为百度坐标是在原始坐标上进行了加密处理，所以不能直接使用用原始坐标。百度提供的转换方法是在线转换，这种方法使用次数有限制并且转换较慢，所以我在Github上找到了一种离线的转换方式，经测试，很准确。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> pi: 圆周率。</span></span><br><span class="line"><span class="comment"> a: 卫星椭球坐标投影到平面地图坐标系的投影因子。</span></span><br><span class="line"><span class="comment"> ee: 椭球的偏心率。</span></span><br><span class="line"><span class="comment"> x_pi: 圆周率转换量。</span></span><br><span class="line"><span class="comment"> transformLat(lat, lon): 转换方法，比较复杂，不必深究了。输入：横纵坐标，输出：转换后的横坐标。</span></span><br><span class="line"><span class="comment"> transformLon(lat, lon): 转换方法，同样复杂，自行脑补吧。输入：横纵坐标，输出：转换后的纵坐标。</span></span><br><span class="line"><span class="comment"> wgs2gcj(lat, lon): WGS坐标转换为GCJ坐标。</span></span><br><span class="line"><span class="comment"> gcj2bd(lat, lon): GCJ坐标转换为百度坐标。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pi = <span class="number">3.14159265358979324</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">6378245.0</span>;</span><br><span class="line"><span class="keyword">var</span> ee = <span class="number">0.00669342162296594323</span>;</span><br><span class="line"><span class="keyword">var</span> x_pi = <span class="number">3.14159265358979324</span> * <span class="number">3000.0</span> / <span class="number">180.0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wgs2bd</span>(<span class="params">lat, lon</span>) </span>&#123;</span><br><span class="line">       _wgs2gcj = wgs2gcj(lat, lon);</span><br><span class="line">       _gcj2bd = gcj2bd(_wgs2gcj[<span class="number">0</span>], _wgs2gcj[<span class="number">1</span>]);</span><br><span class="line">       <span class="keyword">return</span> _gcj2bd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gcj2bd</span>(<span class="params">lat, lon</span>) </span>&#123;</span><br><span class="line">       x = lon, y = lat;</span><br><span class="line">       z = <span class="built_in">Math</span>.sqrt(x * x + y * y) + <span class="number">0.00002</span> * <span class="built_in">Math</span>.sin(y * x_pi);</span><br><span class="line">       theta = <span class="built_in">Math</span>.atan2(y, x) + <span class="number">0.000003</span> * <span class="built_in">Math</span>.cos(x * x_pi);</span><br><span class="line">       bd_lon = z * <span class="built_in">Math</span>.cos(theta) + <span class="number">0.0065</span>;</span><br><span class="line">       bd_lat = z * <span class="built_in">Math</span>.sin(theta) + <span class="number">0.006</span>;</span><br><span class="line">       <span class="keyword">return</span> [ bd_lat, bd_lon ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bd2gcj</span>(<span class="params">lat, lon</span>) </span>&#123;</span><br><span class="line">       x = lon - <span class="number">0.0065</span>, y = lat - <span class="number">0.006</span>;</span><br><span class="line">       z = <span class="built_in">Math</span>.sqrt(x * x + y * y) - <span class="number">0.00002</span> * <span class="built_in">Math</span>.sin(y * x_pi);</span><br><span class="line">       theta = <span class="built_in">Math</span>.atan2(y, x) - <span class="number">0.000003</span> * <span class="built_in">Math</span>.cos(x * x_pi);</span><br><span class="line">       gg_lon = z * <span class="built_in">Math</span>.cos(theta);</span><br><span class="line">       gg_lat = z * <span class="built_in">Math</span>.sin(theta);</span><br><span class="line">       <span class="keyword">return</span> [ gg_lat, gg_lon ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wgs2gcj</span>(<span class="params">lat, lon</span>) </span>&#123;</span><br><span class="line">       dLat = transformLat(lon - <span class="number">105.0</span>, lat - <span class="number">35.0</span>);</span><br><span class="line">       dLon = transformLon(lon - <span class="number">105.0</span>, lat - <span class="number">35.0</span>);</span><br><span class="line">       radLat = lat / <span class="number">180.0</span> * pi;</span><br><span class="line">       magic = <span class="built_in">Math</span>.sin(radLat);</span><br><span class="line">       magic = <span class="number">1</span> - ee * magic * magic;</span><br><span class="line">       sqrtMagic = <span class="built_in">Math</span>.sqrt(magic);</span><br><span class="line">       dLat = (dLat * <span class="number">180.0</span>) / ((a * (<span class="number">1</span> - ee)) / (magic * sqrtMagic) * pi);</span><br><span class="line">       dLon = (dLon * <span class="number">180.0</span>) / (a / sqrtMagic * <span class="built_in">Math</span>.cos(radLat) * pi);</span><br><span class="line">       mgLat = lat + dLat;</span><br><span class="line">       mgLon = lon + dLon;</span><br><span class="line">       <span class="keyword">return</span> [ mgLat, mgLon ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">transformLat</span>(<span class="params">lat, lon</span>) </span>&#123;</span><br><span class="line">       ret = -<span class="number">100.0</span> + <span class="number">2.0</span> * lat + <span class="number">3.0</span> * lon + <span class="number">0.2</span> * lon * lon + <span class="number">0.1</span> * lat * lon + <span class="number">0.2</span> * <span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.abs(lat));</span><br><span class="line">       ret += (<span class="number">20.0</span> * <span class="built_in">Math</span>.sin(<span class="number">6.0</span> * lat * pi) + <span class="number">20.0</span> * <span class="built_in">Math</span>.sin(<span class="number">2.0</span> * lat * pi)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">       ret += (<span class="number">20.0</span> * <span class="built_in">Math</span>.sin(lon * pi) + <span class="number">40.0</span> * <span class="built_in">Math</span>.sin(lon / <span class="number">3.0</span> * pi)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">       ret += (<span class="number">160.0</span> * <span class="built_in">Math</span>.sin(lon / <span class="number">12.0</span> * pi) + <span class="number">320</span> * <span class="built_in">Math</span>.sin(lon * pi  / <span class="number">30.0</span>)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">       <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">transformLon</span>(<span class="params">lat, lon</span>) </span>&#123;</span><br><span class="line">       ret = <span class="number">300.0</span> + lat + <span class="number">2.0</span> * lon + <span class="number">0.1</span> * lat * lat + <span class="number">0.1</span> * lat * lon + <span class="number">0.1</span> * <span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.abs(lat));</span><br><span class="line">       ret += (<span class="number">20.0</span> * <span class="built_in">Math</span>.sin(<span class="number">6.0</span> * lat * pi) + <span class="number">20.0</span> * <span class="built_in">Math</span>.sin(<span class="number">2.0</span> * lat * pi)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">       ret += (<span class="number">20.0</span> * <span class="built_in">Math</span>.sin(lat * pi) + <span class="number">40.0</span> * <span class="built_in">Math</span>.sin(lat / <span class="number">3.0</span> * pi)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">       ret += (<span class="number">150.0</span> * <span class="built_in">Math</span>.sin(lat / <span class="number">12.0</span> * pi) + <span class="number">300.0</span> * <span class="built_in">Math</span>.sin(lat / <span class="number">30.0</span> * pi)) * <span class="number">2.0</span> / <span class="number">3.0</span>;</span><br><span class="line">       <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>4、界面布局，这个就是通过编辑CSS代码来实现的，了解一下CSS就知道了，不难，不过值得一提的是我们调试CSS代码可以直接在浏览器的开发者工具里进行，调试好了再将代码复制到css文件中，这样方便一些。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">html</span>,<span class="selector-id">#allmap</span> &#123;<span class="attribute">width</span>: <span class="number">100%</span>;<span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">overflow</span>: hidden;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">265</span>, <span class="number">265</span>, <span class="number">265</span>, <span class="number">0.9</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">27</span>, <span class="number">142</span>, <span class="number">236</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-wrap</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">226px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">265</span>, <span class="number">265</span>, <span class="number">265</span>, <span class="number">0.9</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">27</span>, <span class="number">142</span>, <span class="number">236</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">27</span>, <span class="number">142</span>, <span class="number">236</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">27</span>, <span class="number">142</span>, <span class="number">236</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">27</span>, <span class="number">142</span>, <span class="number">236</span>, <span class="number">0.8</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.file_select</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.information</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.txt</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span> <span class="number">10px</span> <span class="number">2px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span>,<span class="selector-tag">textarea</span>&#123;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>感兴趣的朋友可以直接通过百度地图API实现其它功能，源代码在文章最下方。</p></blockquote><h2 id="2、基于Leaflet的状态及轨迹重现"><a href="#2、基于Leaflet的状态及轨迹重现" class="headerlink" title="2、基于Leaflet的状态及轨迹重现"></a>2、基于Leaflet的状态及轨迹重现</h2><h3 id="2-1、功能简介"><a href="#2-1、功能简介" class="headerlink" title="2.1、功能简介"></a>2.1、功能简介</h3><ul><li>数据提取：提取出GPS文件中的坐标、速度、高度等信息</li><li>坐标转换：原始坐标转化成其他坐标系</li><li>轨迹描绘：根据提取出来的信息将轨迹逐点描绘出来，并显示相应的状态信息</li><li>支持地图的放大与缩小</li><li>支持图层切换，MapBox提供的图层支持国外的高级别卫星地图</li></ul><h3 id="2-2、效果展示"><a href="#2-2、效果展示" class="headerlink" title="2.2、效果展示"></a>2.2、效果展示</h3><p><img src="https://cdn.jsdelivr.net/gh/pingden/mypic/img/GPS_Leaflet.gif" alt="GPS_Leaflet"></p><p><img src="https://cdn.jsdelivr.net/gh/pingden/mypic/img/306.png" alt="306"></p><p><img src="https://cdn.jsdelivr.net/gh/pingden/mypic/img/402.png" alt="402"></p><h3 id="2-3、项目实现"><a href="#2-3、项目实现" class="headerlink" title="2.3、项目实现"></a>2.3、项目实现</h3><blockquote><p>因为我之前使用百度地图API有一些问题没有解决，所以改用了Leaflet，有了之前使用百度地图API的经验，现在上手Leaflet就很容易，因为很多接口都差不多。</p></blockquote><h4 id="2-3-1、准备"><a href="#2-3-1、准备" class="headerlink" title="2.3.1、准备"></a>2.3.1、准备</h4><blockquote><p>首先，到Leaflet官方下载源码，<a href="https://leafletjs.com/">Leaflet - a JavaScript library for interactive maps </a>，当然不下载直接在线引入也是可以的。然后根据官方说明操作就可以了，也可以参考别人写的教程<a href="https://iowiki.com/leafletjs/leafletjs_index.html">LeafletJS - 教程_学习LeafletJS</a>。</p></blockquote><h4 id="2-3-2、实现"><a href="#2-3-2、实现" class="headerlink" title="2.3.2、实现"></a>2.3.2、实现</h4><blockquote><p>与百度地图API不同的是，Leaflet需要我们自己添加瓦片图层，这个选择就多了，例如高度地图、天地图…，可以在网上找。说到这里就不得不提一下我选择的MapBox图层，这个图层的清晰度比天地图等要高，而且包含全世界的高级别卫星地图，缺点就是服务器在国外，加载速度相对较慢。</p></blockquote><blockquote><p>1、初始化，一开始选择了三个切片图层，但因为高德的瓦片不是很全并且坐标系和另外两个有所不同，所以就没用了。天地图的切片图层可以到这里获取<a href="http://lbs.tianditu.gov.cn/server/MapService.html">天地图API </a>；MapBox的图层可以到这里获取<a href="https://studio.mapbox.com/">Mapbox Studio</a>，关于MapBox的操作可以参考<a href="https://malagis.com/learning-leaflet-js-note.html">Leaflet学习笔记【更新中】</a>。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Creating map options</span></span><br><span class="line"><span class="keyword">var</span> mapOptions = &#123;</span><br><span class="line">    <span class="attr">center</span>: [<span class="number">30.63231</span>, <span class="number">104.0820</span>],</span><br><span class="line">    <span class="attr">zoom</span>: <span class="number">16</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Creating a map object</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> L.map(<span class="string">&#x27;map&#x27;</span>, mapOptions);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Creating Layer objects</span></span><br><span class="line"><span class="comment">// 高德地图影像</span></span><br><span class="line"><span class="keyword">var</span> Gaode = <span class="keyword">new</span> L.tileLayer(<span class="string">&#x27;https://webst0&#123;s&#125;.is.autonavi.com/appmaptile?style=6&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">maxZoom</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">maxNativeZoom</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">minZoom</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">attribution</span>: <span class="string">&quot;高德地图 AutoNavi.com&quot;</span>,</span><br><span class="line">    <span class="attr">subdomains</span>: <span class="string">&quot;1234&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 天地图影像</span></span><br><span class="line"><span class="keyword">var</span> Tiandi = L.tileLayer(<span class="string">&#x27;http://t&#123;s&#125;.tianditu.gov.cn/img_w/wmts?tk=da144caca3dc9a894a921aa6c937ca71&amp;SERVICE=WMTS&amp;REQUEST=GetTile&amp;VERSION=1.0.0&amp;LAYER=img&amp;STYLE=default&amp;TILEMATRIXSET=w&amp;FORMAT=tiles&amp;TileMatrix=&#123;z&#125;&amp;TileCol=&#123;x&#125;&amp;TileRow=&#123;y&#125;&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">subdomains</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// MapBox</span></span><br><span class="line"><span class="keyword">var</span> mapBox = L.tileLayer(<span class="string">&#x27;https://api.mapbox.com/styles/v1/deven3433/ckvi4woqi0vy615qljjvthgn9/tiles/256/&#123;z&#125;/&#123;x&#125;/&#123;y&#125;@2x?access_token=pk.eyJ1IjoiZGV2ZW4zNDMzIiwiYSI6ImNrdmkzYjMxcTI2Y2Iydm55NmEwaWs2Z2wifQ.bMgbUERe8dqTan0PENXgBw&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> baseLayers = &#123;</span><br><span class="line">    <span class="comment">//&quot;高德地图&quot;: layer1,    // 高德卫星影像显示不全，故没有采用，此外高德和另外两个采用的坐标系不同</span></span><br><span class="line">    <span class="string">&quot;天地图&quot;</span>: Tiandi,       </span><br><span class="line">    <span class="string">&quot;MapBox&quot;</span>: mapBox</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Adding layer to the map</span></span><br><span class="line">map.addLayer(Tiandi);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加图层选择控件到地图</span></span><br><span class="line">L.control.layers(baseLayers, <span class="literal">null</span>).addTo(map);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> flag_timer = <span class="literal">true</span>;  <span class="comment">// 定时描点使能标志</span></span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;        <span class="comment">//在全局中绑定按下事件</span></span><br><span class="line">    <span class="keyword">var</span> e = event || <span class="built_in">window</span>.e;</span><br><span class="line">    <span class="keyword">var</span> keyCode = e.keyCode || e.which;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (keyCode) &#123;</span><br><span class="line">        <span class="comment">// 按Backspace结束描点</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            flag_timer = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 按空格暂停描点</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">32</span>:</span><br><span class="line">            alert(<span class="string">&#x27;暂停，点击确定继续&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>2、关键变量</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> r = <span class="number">255</span>, g = <span class="number">0</span>, b = <span class="number">0</span>;  <span class="comment">// 颜色值</span></span><br><span class="line"><span class="keyword">var</span> pointColor = &#123;         <span class="comment">// 描点属性</span></span><br><span class="line">    <span class="attr">radius</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">stroke</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">fillColor</span>: <span class="string">&#x27;rgb(&#x27;</span> + r + <span class="string">&#x27;,&#x27;</span> + g + <span class="string">&#x27;,&#x27;</span> + b + <span class="string">&#x27;)&#x27;</span>,</span><br><span class="line">    <span class="attr">fillOpacity</span>: <span class="number">1</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 起始点标志, 0为起点、1为普通点、2为终点</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重现速度</span></span><br><span class="line"><span class="keyword">var</span> displaySpeed = <span class="number">50</span>;</span><br><span class="line"><span class="comment">//最大速度</span></span><br><span class="line"><span class="keyword">var</span> MaxSpeed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上一地图级别，当前地图级别</span></span><br><span class="line"><span class="keyword">var</span> last = <span class="number">16</span>, current = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> pointArr = [];   <span class="comment">// 坐标数组</span></span><br><span class="line"><span class="keyword">var</span> infoArr = [];    <span class="comment">// 信息数组</span></span><br></pre></td></tr></table></figure><blockquote><p>3、按钮功能实现</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setSpeed</span>(<span class="params"></span>)</span>&#123;  <span class="comment">//设置描点时间 单位：ms/点</span></span><br><span class="line">  displaySpeed = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;spedSet&#x27;</span>).value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ZoomIn</span>(<span class="params"></span>)</span>&#123;  <span class="comment">// 放大地图</span></span><br><span class="line">  map.zoomIn();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ZoomOut</span>(<span class="params"></span>)</span>&#123; <span class="comment">//缩小地图</span></span><br><span class="line">  map.zoomOut();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>4、自定义的一些接口</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置当前可能的状态图</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stateDisplay</span>(<span class="params">speed</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(speed &lt; <span class="number">10</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;state&quot;</span>).src = <span class="string">&quot;icon/foot.png&quot;</span>;</span><br><span class="line">  &#125;  <span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">30</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;state&quot;</span>).src = <span class="string">&quot;icon/bike.png&quot;</span>;</span><br><span class="line">  &#125;  <span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">120</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;state&quot;</span>).src = <span class="string">&quot;icon/car.png&quot;</span>;</span><br><span class="line">  &#125;  <span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">200</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;state&quot;</span>).src = <span class="string">&quot;icon/train.png&quot;</span>;</span><br><span class="line">  &#125;  <span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">500</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;state&quot;</span>).src = <span class="string">&quot;icon/high_speed.png&quot;</span>;</span><br><span class="line">  &#125;  <span class="keyword">else</span> <span class="keyword">if</span>(speed &gt;= <span class="number">500</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;state&quot;</span>).src = <span class="string">&quot;icon/plane.png&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 坐标转换</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_translate</span>(<span class="params">lat,lon</span>)    //根据坐标信息描点</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//转换经度   dddmm.mmmm转ddd.dddd</span></span><br><span class="line">    <span class="keyword">var</span> d = lon.slice(<span class="number">0</span>,<span class="number">3</span>);      <span class="comment">//取出度</span></span><br><span class="line">    <span class="keyword">var</span> m = lon.slice(<span class="number">3</span>,<span class="number">10</span>);     <span class="comment">//取出分</span></span><br><span class="line"></span><br><span class="line">    m = m/<span class="number">60</span>;</span><br><span class="line">    lon = <span class="built_in">parseFloat</span>(d) + <span class="built_in">parseFloat</span>(m);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转换纬度   ddmm.mmmm转dd.dddd</span></span><br><span class="line">    d = lat.slice(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">    m = lat.slice(<span class="number">2</span>,<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">    m = m/<span class="number">60</span>;</span><br><span class="line">    lat = <span class="built_in">parseFloat</span>(d) + <span class="built_in">parseFloat</span>(m);    <span class="comment">//转成浮点型后计算</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> point_temp = &#123;</span><br><span class="line">      <span class="attr">lat</span>: lat,</span><br><span class="line">      <span class="attr">lon</span>: lon,</span><br><span class="line">    &#125;;</span><br><span class="line">    pointArr.push(point_temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>5、描点函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> start =  &#123;</span><br><span class="line">    <span class="attr">icon</span>: L.icon(&#123;</span><br><span class="line">        <span class="attr">iconUrl</span>: <span class="string">&#x27;icon/start.png&#x27;</span>,</span><br><span class="line">        <span class="attr">iconSize</span>: [<span class="number">48</span>, <span class="number">48</span>],</span><br><span class="line">        <span class="attr">iconAnchor</span>: [<span class="number">24</span>, <span class="number">42</span>],</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> final =  &#123;</span><br><span class="line">    <span class="attr">icon</span>: L.icon(&#123;</span><br><span class="line">        <span class="attr">iconUrl</span>: <span class="string">&#x27;icon/final.png&#x27;</span>,</span><br><span class="line">        <span class="attr">iconSize</span>: [<span class="number">48</span>, <span class="number">48</span>],</span><br><span class="line">        <span class="attr">iconAnchor</span>: [<span class="number">24</span>, <span class="number">42</span>],</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>; <span class="comment">//用于地图级别设置消抖</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params">lat,lon,speed</span>)</span>&#123;             </span><br><span class="line">  stateDisplay(speed); </span><br><span class="line">  g = <span class="built_in">parseInt</span>(speed/MaxSpeed * <span class="number">255</span>);</span><br><span class="line">  b = g;</span><br><span class="line">  pointColor.fillColor = <span class="string">&#x27;rgb(&#x27;</span>+r+<span class="string">&#x27;,&#x27;</span>+g+<span class="string">&#x27;,&#x27;</span>+b+<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;</span><br><span class="line">       <span class="keyword">new</span> L.Marker([lat,lon],start).addTo(map);         <span class="comment">//描起点          </span></span><br><span class="line">       map.panTo([lat,lon]); <span class="comment">// 设置地图中心点</span></span><br><span class="line">       flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;      </span><br><span class="line">      <span class="keyword">new</span> L.circleMarker([lat,lon],pointColor).addTo(map);</span><br><span class="line">      <span class="keyword">if</span>(speed&lt;<span class="number">150</span>)&#123;</span><br><span class="line">         current = <span class="number">16</span>;</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(speed&lt;<span class="number">400</span>)&#123;</span><br><span class="line">         current = <span class="number">15</span>;</span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(speed&lt;<span class="number">600</span>)&#123;</span><br><span class="line">         current = <span class="number">14</span>; </span><br><span class="line">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(speed&gt;=<span class="number">600</span>)&#123;</span><br><span class="line">         current = <span class="number">13</span>;             <span class="comment">// speed存在空值需过滤</span></span><br><span class="line">       &#125;       </span><br><span class="line"></span><br><span class="line">      map.panTo([lat,lon],&#123;</span><br><span class="line">          <span class="attr">animate</span>:  <span class="literal">false</span></span><br><span class="line">       &#125;); <span class="comment">// 设置地图中心点</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">//设置地图级别</span></span><br><span class="line">       <span class="keyword">if</span>(last != current)&#123;</span><br><span class="line">          count++;             </span><br><span class="line">          <span class="keyword">if</span>(count &gt; <span class="number">10</span>)&#123;            </span><br><span class="line">             count = <span class="number">0</span>;</span><br><span class="line">             last = current;</span><br><span class="line">             map.setZoom(current);                          </span><br><span class="line">          &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="keyword">new</span> L.Marker([lat,lon],final).addTo(map); <span class="comment">//描终点</span></span><br><span class="line">       map.panTo([lat,lon]); <span class="comment">// 设置地图中心点          </span></span><br><span class="line">       flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>6、数据提取及轨迹重现</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件读取函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dealSelectFiles</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementById(<span class="string">&quot;selectFiles&quot;</span>).files[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();<span class="comment">//这是核心,读取操作就是由它完成.</span></span><br><span class="line">    reader.readAsText(file);<span class="comment">//读取文件的内容,也可以读取文件的URL</span></span><br><span class="line"></span><br><span class="line">    reader.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//当读取完成后回调这个函数,然后此时文件的内容存储到了result中,直接操作即可</span></span><br><span class="line">        <span class="keyword">var</span> arr = <span class="built_in">this</span>.result.split(<span class="string">&quot;$&quot;</span>);   <span class="comment">//数据分行处理</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>;                </span><br><span class="line">        <span class="keyword">var</span> high,sped;</span><br><span class="line">        flag_timer = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(arr[i]!=<span class="literal">null</span> &amp;&amp; arr[i] != <span class="literal">undefined</span> &amp;&amp; arr[i] != <span class="string">&#x27;&#x27;</span>)&#123;                    </span><br><span class="line">            <span class="comment">//找到返回位置，未找到返回-1</span></span><br><span class="line">            <span class="keyword">if</span>(arr[i].indexOf(<span class="string">&#x27;GPGGA&#x27;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> info = arr[i].split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                high = info[<span class="number">9</span>];                       </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(arr[i].indexOf(<span class="string">&#x27;GPRMC&#x27;</span>) != -<span class="number">1</span> &amp;&amp; arr[i].indexOf(<span class="string">&#x27;V&#x27;</span>) == -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> info_temp = &#123;</span><br><span class="line">                    <span class="attr">date</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">time</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">high</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">speed</span>:<span class="literal">undefined</span>,</span><br><span class="line">                    <span class="attr">direction</span>:<span class="literal">undefined</span></span><br><span class="line">                &#125;;                       </span><br><span class="line">                <span class="keyword">var</span> info = arr[i].split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(info[<span class="number">2</span>] == <span class="string">&#x27;A&#x27;</span>)&#123;                      </span><br><span class="line">                    my_translate(info[<span class="number">3</span>],info[<span class="number">5</span>]);</span><br><span class="line">                    sped = <span class="built_in">parseFloat</span>(info[<span class="number">7</span>]) * <span class="number">1.852</span>;   <span class="comment">//km/h = 海速*1.852</span></span><br><span class="line">                    <span class="keyword">if</span>(MaxSpeed &lt; sped)MaxSpeed = sped;</span><br><span class="line"></span><br><span class="line">                    info_temp.high = high;</span><br><span class="line">                    info_temp.speed = sped;</span><br><span class="line">                    info_temp.time = (<span class="built_in">parseInt</span>(info[<span class="number">1</span>].slice(<span class="number">0</span>,<span class="number">2</span>))+<span class="number">8</span>)%<span class="number">24</span>+<span class="string">&#x27;:&#x27;</span>+info[<span class="number">1</span>].slice(<span class="number">2</span>,<span class="number">4</span>)+<span class="string">&#x27;:&#x27;</span>+info[<span class="number">1</span>].slice(<span class="number">4</span>,<span class="number">6</span>);</span><br><span class="line">                    info_temp.date = info[<span class="number">9</span>].slice(<span class="number">4</span>,<span class="number">6</span>)+<span class="string">&#x27;年&#x27;</span>+info[<span class="number">9</span>].slice(<span class="number">2</span>,<span class="number">4</span>)+<span class="string">&#x27;月&#x27;</span>+info[<span class="number">9</span>].slice(<span class="number">0</span>,<span class="number">2</span>)+<span class="string">&#x27;日&#x27;</span>;</span><br><span class="line">                    info_temp.direction = info[<span class="number">8</span>]+<span class="string">&#x27;°&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    infoArr.push(info_temp);                           </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        alert(<span class="string">&#x27;数据处理完成&#x27;</span>); </span><br><span class="line">        <span class="comment">//更新颜色条刻度</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;sped1&quot;</span>).innerText = <span class="built_in">parseInt</span>(MaxSpeed/<span class="number">4</span>);     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;sped2&quot;</span>).innerText = <span class="built_in">parseInt</span>(MaxSpeed/<span class="number">2</span>);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;sped3&quot;</span>).innerText = <span class="built_in">parseInt</span>(MaxSpeed/<span class="number">4</span> * <span class="number">3</span>);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;maxsped&quot;</span>).innerText = <span class="built_in">parseInt</span>(MaxSpeed);                       </span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> len = pointArr.length;              </span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">            display(pointArr[index].lat,pointArr[index].lon,infoArr[index].speed);</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;high&quot;</span>).value = infoArr[index].high +<span class="string">&#x27; m&#x27;</span>;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;time&quot;</span>).value = infoArr[index].time;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;speed&quot;</span>).value = infoArr[index].speed.toFixed(<span class="number">4</span>)+<span class="string">&#x27; km/h&#x27;</span>;;    <span class="comment">//保留4位小数</span></span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;direction&quot;</span>).value = infoArr[index].direction;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;date&quot;</span>).value = infoArr[index].date;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;longitude&quot;</span>).value = pointArr[index].lon.toFixed(<span class="number">4</span>)+<span class="string">&#x27;°E&#x27;</span>;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;latitude&quot;</span>).value = pointArr[index].lat.toFixed(<span class="number">4</span>)+<span class="string">&#x27;°N&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新高度显示</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(infoArr[index].high))<span class="built_in">document</span>.getElementById(<span class="string">&quot;highbar&quot;</span>).value = infoArr[index].high;                           </span><br><span class="line"></span><br><span class="line">            index++;</span><br><span class="line">            <span class="comment">// 更新进度条</span></span><br><span class="line">            <span class="keyword">var</span> Progress = (index/len)*<span class="number">1000</span>;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;progressbar&quot;</span>).value = Progress;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(index&gt;= len)&#123;   <span class="comment">// 描点结束</span></span><br><span class="line">                flag = <span class="number">2</span>;</span><br><span class="line">                display(pointArr[len-<span class="number">1</span>].lat,pointArr[len-<span class="number">1</span>].lon); </span><br><span class="line">                pointArr = [];  <span class="comment">//清空数组</span></span><br><span class="line">                infoArr = [];                      </span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag_timer == <span class="literal">false</span>)&#123;  <span class="comment">// 描点被按下Backspace结束</span></span><br><span class="line">                flag_timer = <span class="literal">true</span>;</span><br><span class="line">                flag = <span class="number">2</span>;</span><br><span class="line">                pointArr = [];</span><br><span class="line">                infoArr = [];</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,displaySpeed);             </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、项目源代码"><a href="#3、项目源代码" class="headerlink" title="3、项目源代码"></a>3、项目源代码</h2><blockquote><p>最后把项目源代码给出来，需要的自取</p><p>Github：<a href="https://github.com/pingden/GPS_Trajectory_reproduction.git">https://github.com/pingden/GPS_Trajectory_reproduction.git</a></p><p>Gitee：<a href="https://gitee.com/pingdeng/GPS.git">https://gitee.com/pingdeng/GPS.git</a></p><p>百度云：</p><p>​    链接：<a href="https://pan.baidu.com/s/1Qh3G2VKrSIvBAZPRevXsEA">https://pan.baidu.com/s/1Qh3G2VKrSIvBAZPRevXsEA</a><br>​    提取码：0p9h</p></blockquote><p><strong>有问题可以在评论区留言~~~</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机三级选择题</title>
      <link href="/archives/3f58cefd.html"/>
      <url>/archives/3f58cefd.html</url>
      
        <content type="html"><![CDATA[<h1 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h1><h2 id="1、网络系统结构与设计原则"><a href="#1、网络系统结构与设计原则" class="headerlink" title="1、网络系统结构与设计原则"></a>1、网络系统结构与设计原则</h2><ul><li>ASDL上行64K<del>640K、下行500k</del>7M、具有<strong>非对称</strong>特性、可以通过 <strong>PSTN</strong> 接入 Internet</li><li>OC-1     51.86</li><li>广域网的主要技术：<strong>diffserve</strong>、<strong>MPLS</strong>、<strong>RSVP</strong></li><li><strong>核心层</strong>提供Internet网络出口</li><li>RPR每一个节点执行<strong>SRP</strong>公平算法，<strong>外（顺时针）</strong>，<strong>内（逆时针）</strong>，都可以用于传输分组和控制分组，数据帧从<strong>目的节点</strong>回收，两个 RPR 结点间的裸光纤最大长度可达 <strong>100公里</strong></li><li>802.11.a  54M       802.11.b    11M</li><li>Cable Modem采用<strong>频分复用</strong>分出上下行信道</li><li>光以太网技术<strong>不是</strong>以信元为单位传输的</li></ul><h2 id="2、中小型网络系统总体规划与设计方法"><a href="#2、中小型网络系统总体规划与设计方法" class="headerlink" title="2、中小型网络系统总体规划与设计方法"></a>2、中小型网络系统总体规划与设计方法</h2><ul><li><p>高性能路由器一般采用<strong>交换式</strong>的结构，决定着路由器的吞吐量</p></li><li><p>网络系统分层设计中层次之间上联带宽与下联带宽的比例一般控制在<strong>1:20</strong>。</p></li><li><p>路由器的主要技术指标包括：</p><pre><code>1、吞吐量：指包转发能力，涉及两个内容--端口吞吐量和整机吞吐量，与路由器端口数量、**端口速率**、包长度、包类型有关。2、**背板能力**：是路由器输入输出的物理通道，高性能路由器采用交换式结构，决定着路由器的**吞吐量**。3、**丢包率**，衡量路由器超负荷工作能力的指标之一。4、延时和延时抖动：高速路由器要求长度为1518B的IP包延时小于1ms，语音、视频业务对延时抖动要求较高。5、突发处理能力：以最小帧间隔发送而不引起丢失的最大发送速率。6、服务质量：表现在队列管理机制、端口硬件队列管理、支持QoS协议上，其中队列管理机制指队列调度算法和拥塞管理机制。7、可靠性与可用性：无故障连续工作时间大于**10**万小时，系统故障恢复时间小于**30**分钟，所有的自动切换在**50ms**内完成。</code></pre><p>​    8、突发处理能力<strong>不是</strong>以最小帧间隔值来衡量的</p></li><li><p>RAID：独立磁盘冗余阵列，将多个独立的磁盘组成一个整体，提高存取速度，提高系统可靠性。</p><pre><code>**Cluster**：集群，向一组独立的计算机提供高速通信线路，组成一个共享数据存储空间的服务器系统，同时如果一台主机出现了故障，它所运行的程序将立即转移到其他主机。    </code></pre></li><li><p>交换机</p><ul><li><p>基本功能是维护一个表示 <strong>MAC 地址和交换机端口对应关系</strong>的交换表</p></li><li><p>具有三种交换模式：1.<strong>快速转发</strong>直通式，接收到前 <strong>14 个字节</strong>就转发数据；</p><p>​                                   2.<strong>碎片丢弃式</strong>，缓存前 <strong>64</strong> 个字节；</p><p>​                                   3.<strong>储存转发式</strong>，转发之前读取整个帧</p></li><li><p><strong>三层交换机</strong>是具有部分路由器功能的交换机，用于加快大型局域网内部的数据交换</p></li></ul></li></ul><h2 id="3、IP地址规划设计技术"><a href="#3、IP地址规划设计技术" class="headerlink" title="3、IP地址规划设计技术"></a>3、IP地址规划设计技术</h2><p><img src="C:\Users\Deng\AppData\Roaming\Typora\typora-user-images\image-20210903104734207.png" alt="image-20210903104734207"></p><ul><li><strong>外网访问主机的URL为左上的S</strong></li><li>IPv6不可用子网掩码表示网络号长度</li></ul><h2 id="4、路由器设计基础"><a href="#4、路由器设计基础" class="headerlink" title="4、路由器设计基础"></a>4、路由器设计基础</h2><ul><li><p><strong>OSPF</strong>    （最短路径优先协议）</p><ul><li>区域内每个路由器包含<strong>本区域的完整网络拓扑</strong>，而不是全网的情况（拓扑的意思是链接形式和位置关系之类的）</li></ul><p>​    1.OSPF是开放系统最短路径优先协议。<br>​    2.OSPF使用<strong>分布式</strong>链路状态协议。<br>​    3.OSPF要求路由器发送的信息是本路由器与哪些路由器相邻，以及链路的度量值（OSPF使用的度量值包括<strong>费用、距离、延时、带宽</strong>）。<br>​    4.OSPF使用<strong>洪泛法</strong>发送信息，向所有路由发送<br>​    5.OSPF协议要求让路由器建立一个链路状态数据库，<strong>该数据库实际上是全网的拓扑结构图</strong>。<br>​    6.OSPF将一个自治系统划分为多个区域（area），每个区域有一个<strong>32位</strong>的区域标识符，每个区域内的路由器通常不超过<strong>200个</strong>。<br>​    7.使用OSPF的路由器只需要建立本区域内的链路状态数据库，负责各区域之间通信的路由器叫做区域边界路由器，只需要将来自本区域的信息发送给下一个区域的区域边界路由器，同样不需要获取其他区域的链路状态数据库。</p></li><li><p><strong>RIP</strong>  （路由信息协议）</p><ul><li>RIP 是<strong>内部网关</strong>协议中使用最广泛的一种协议，它是一种<strong>分布式</strong>、基于<strong>距离向量</strong>的路由选择协议，要求路由器周期性地向外发送路由刷新报文</li><li>路由刷新报文主要内容是由若干个（V，D）组成的表。V 标识该路由器可以到达的目标网络（或目的主机）；D 指出该路由器到达目标网络（或目标主机）的距离。距离D对应该路由器上的跳数。其他路由器在接收到某个路由器的（V，D）报文后，按照最短路径原则对各自的路由表进行刷新</li></ul></li><li><p><strong>BGP</strong> （边界网关协议）</p><ul><li><p>使用 <strong>TCP</strong>（不是UDP）与其他自治系统的 BGP 发言人交换信息</p></li><li><p>BGP 采用<strong>路由向量协议</strong>，而 RIP 采用距离向量协议</p></li><li><p>BGP协议有四种分组：<strong>open</strong>（与相邻的另一个BGP发言人建立关系）、<strong>update</strong>（发送要更新的某一条路由信息或要删除的多条路由信息）、<strong>keepalive</strong>（周期性的证实相邻的边界路由器存在）、<strong>notification</strong>（发送监测到的错误）。</p></li></ul></li></ul><h2 id="5、局域网技术"><a href="#5、局域网技术" class="headerlink" title="5、局域网技术"></a>5、局域网技术</h2><ul><li><p>嵌入式插座用来<strong>连接双绞线</strong></p></li><li><p><strong>多介质插座用来连接铜缆和光纤</strong>，满足用户“光纤到桌面”的需求</p></li><li><p>建筑群子系统可以是多种布线方式的任意组合，<strong>地下管道布线是最理想的方式</strong></p></li><li><p>STP 比 UTP 贵、复杂、抗干扰能力强、辐射小</p></li><li><p><strong>集线器</strong></p></li></ul><p>​     连接到集线器的<strong>结点</strong>（结点，不是集线器）执行<strong>CSMA/CD</strong>，当一个结点发送数据时，所有结点都能接收到。<br>​    集线器工作在物理层，连接到一个集线器的所有结点<strong>共享一个冲突域</strong>。<br>​    附加知识点：IP地址工作在网络层，MAC地址（物理地址）工作在数据链路层，而集线器运行在物理层，对应的层次不同的就是错误的</p><ul><li><p>综合布线</p><ul><li>关于传输介质（线缆）：通常使用光纤和双绞线。双绞线特点是价格低廉，传输距离上限100米（为留有余量，综合布线时通常认为是<strong>90米</strong>），传输速率上限1Gbps，当双绞线无法满足需求时，就改用光纤（光纤各项参数均高于双绞线，只是价格也高于双绞线）。    </li><li>关于插座，大体分为嵌入式插座（连接双绞线用）、表面安装插座和<strong>多介质信息插座</strong>（连接<strong>铜缆和光纤</strong>，而双绞线和同轴电缆都属于铜缆）。    </li><li>关于干线线缆的铺设：有两种方式：<strong>点对点结合</strong>（最简单直接）和<strong>分支结合</strong>（由干线电缆中一根很大的主馈电缆完成，通过交接盒分出若干小电缆。）    </li><li>关于管理子系统：可以在<strong>管理子系统中</strong>更改、增加、交换、扩展线缆用于改变线缆路由。</li><li>布线方式有四种：<pre><code>架空布线--优点只有成本低，其他方面均不理想。**巷道布线**--利用建筑物之间的地下巷道布线，成本略高于架空布线，需要考虑如何避免线缆，可利用巷道原本的保护设施。直埋布线--除穿过基础墙的部分外，电缆的其他部分没有管道保护。可保持建筑物原貌，线缆应埋在地下60cm以下。**管道布线**--在建筑物下铺设管网，能保持建筑物原貌，并对线缆提供最好的机械保护。**架空布线和直埋布线对线缆的保护不好**，但直埋布线除了考虑线缆在地下的被腐蚀程度高于架空布线外，还要考虑施工挖掘造成的误损。</code></pre></li></ul></li></ul><ul><li>以太网物理层标准命名。<pre><code>命名法是IEEE 802.3 x Type-y Name。其中x表示传输速率，单位Mbps；y表示网段最大长度，**单位100m**；Type表示传输方式是基带还是频带；Name表示局域网名称。</code></pre></li><li>交换机的交换结构有以下四种：<pre><code>1)软件执行交换结构：结构灵活，速度慢，堆叠困难，端口越多性能越弱。2)矩阵交换结构：完全硬件实现，速度快、延时小、结构紧凑、实现相对简单、不易扩展、不利于性能监控和运行管理。3)总线交换：使用多路复用TDM技术，性能好、便于堆叠扩展、易实现广播、易实现监控管理，但是对总线带宽要求较高。4)共享存储器交换结构：结构简单易于实现，成本高，适合小型交换机。</code></pre></li></ul><ul><li><strong>无线接入点（AP）</strong>：集合无线或者有线终端（类似于集线器和交换机），负责频段管理和漫游工作（SSID 是客户端设备用 来访问接入点的唯一标识）</li><li><strong>无线路由器</strong>：具有无线路由功能和 <strong>NAT</strong> 功能的 AP ，可用来建立小的无线局域网。</li><li><strong>无线网桥</strong>：用于连接几个<strong>不同的网段</strong>，实现较远距离的无线通信（网桥最重要的维护工作是构建和维护 MAC 地址表）</li><li><strong>无线网卡</strong>：实现<strong>点对点</strong>通信，安装于各终端节点</li></ul><h2 id="6、交换机及其配置"><a href="#6、交换机及其配置" class="headerlink" title="6、交换机及其配置"></a>6、交换机及其配置</h2><ul><li><p><strong>小型交换表</strong> ： show mac-address-table    目的MAC、类型、VLAN、目的端口(Fast Eth0/3)</p><ul><li><img src="/deven/%E9%80%89%E6%8B%A9%E9%A2%98.assets/image-20210922102638917.png" alt="image-20210922102638917"></li></ul></li><li><p><strong>大型交换表</strong>：show cam dynamic          VLAN、目的MAC、交换机端口（2/5[ALL]）</p><ul><li><img src="/deven/%E9%80%89%E6%8B%A9%E9%A2%98.assets/image-20210922102657693.png" alt="image-20210922102657693"></li></ul></li><li><p>交换模式：<strong>快速</strong>转发(直通，14字节)、<strong>碎片</strong>丢弃(64字节)、<strong>存储</strong>转发(全部)</p></li><li><p><strong>VLAN</strong></p><ul><li><p>工作在数据链路层（OSI参考模型的第二层）</p></li><li><p>可隔离广播信息，每个VLAN为一个广播域</p></li><li><p>不同VLAN中的主机不能直接通信，必须经过路由器或三层交换机</p></li><li><p>VLAN <strong>ID</strong>用<strong>12</strong>bit表示，1<del>1005标准，1006</del>1024保留，1025~4096扩展</p></li><li><p>能用于以太网的为<strong>1~1000</strong>，其中1为默认（不能删除）</p></li><li><p>VLAN name用<strong>32个字符</strong>表示（可数字/字母），默认为<strong>VLAN00xxx</strong>；</p></li></ul></li><li><p><strong>STP生成树协议</strong></p><ul><li>生成树协议是工作于OSI模型<strong>第二层</strong>的链路管理协议，运行在第二层链路中提供冗余路径，最早的标准是<strong>IEEE 802.1D</strong></li><li>运行在<strong>交换机和网桥</strong>设备上</li><li> Bridge ID由<strong>2字节</strong>的优先级（0~61400）和<strong>6字节</strong>的交换机MAC地址组成。</li><li>交换机优先级的增量是<strong>4096</strong>，即每次变化的值必须是4096的整数倍，同时值越小优先级越高。交换机的优先级默认为（<strong>32768</strong>）</li><li> BPDU包含两种：配置BPDU（&lt;=<strong>35</strong>字节），拓扑变化通知BPDU（&lt;=<strong>4</strong>字节）</li><li> Bridge ID<strong>最小</strong>的为根网桥，当优先值相同时，那么就根据MAC地址的值确定根网桥，MAC地址<strong>最小</strong>的为根网桥。BPDU每隔<strong>2s</strong>发送一次。</li></ul></li><li><p>链路失效时，交换机们会重新构建生成树，但是在构建时，需要经历20s（BPDU最大生存时间）+15s（listening）+15s（learning），快速生成树技术可以省掉前20s的时间，提高收敛速度。</p><pre><code>快速生成树技术主要包含：1、backbonefast：网中链路失效时。2、uplinkfast：直连链路失效时。3、portfast：只适用于端口连接单个主机的时候。4、BPDU Filter：强行要求端口转为转发状态。</code></pre></li><li><p>交换机有三种配置方式：<br>   1、使用<strong>Console</strong>控制端口进行本地配置。<strong>第一次配置</strong>只能采取这种方式。<br>   2、使用Telnet远程登录到交换机进行配置。<br>   3、使用Web，利用浏览器进行配置。</p></li></ul><p>​     </p><ul><li><strong>VLAN（虚拟局域网）技术</strong><pre><code>VLAN的划分有三种方法：基于端口号、基于MAC地址，基于第三层地址。由题意可知，4台计算机都连接在交换机的同一端口之下，所以无法基于端口号划分。由于题目没有提到第三层地址，所以第三层地址备选。MAC地址是被固化到网卡芯片上的，每块网卡都具有全球唯一的MAC地址，可以实现题目所要求的vlan划分。</code></pre></li></ul><ul><li><p><strong>配置交换机</strong></p><ul><li><p>设置系统时间</p><ul><li>35系列：clock set 时分秒   日月年</li><li>65系列：set time 星期几  月日年  时分秒</li></ul></li><li><p>配置设备管理地址与缺省路由</p><ul><li><p>35：ip address &lt;IP地址&gt;&lt;子网掩码&gt;</p><p>​         ip default-gateway&lt;缺省路由IP地址&gt;</p></li><li><p>65：set interface sc0 &lt;IP地址&gt;&lt;子网掩码&gt;&lt;直接广播地址&gt;</p><p>​        set ip route 0.0.0.0 &lt;缺省路由IP地址&gt;</p></li></ul></li><li><p>端口配置</p><ul><li><p>35：shutdown（关闭）、    no shutdown（开启）</p><p>​        duplex  full（设置为全双工）</p><p>​        duplex  half（设置为半双工）</p><p>​        speed 10 （设置端口速率为10Mbit/s）</p></li><li><p>65：命令格式为set port name &lt;mod/port&gt;<name>     (name为端口描述)</p><p>​        set port disable &lt;mod/port&gt;   （关闭端口）</p><p>​        set port enable &lt;mod/port&gt;   （开启端口）</p><p>​        set port duplex &lt;mod/port&gt;   full（设置为全双工）</p><p>​        set port duplex &lt;mod/port&gt;   half（设置为半双工）</p><p>​        set port speed &lt;mod/port&gt;  10（设置端口速度为10Mbit/s）</p></li></ul></li><li><p>VLAN的配置</p><ul><li><p>35：vlan <vlan_ID> name <vlan_name> （建立）</p><p>  ​        no vlan 100 （删除ID为100的）</p></li><li><p>65：set vlan <vlan_ID> name <vlan_name>  （建立）</p><p>​        clear vlan 100 （删除ID为100的）</p></li></ul></li><li><p>VLAN Trunk的配置</p><ul><li><p>35：switchport trunk encapsulation dotlq（封装模式为<strong>802.1Q</strong>）</p><p>​        switchport trunk encapsulation isl（封装<strong>ISL</strong>协议）</p><p>​        switchport trunk allowed vlan 1，10 （允许VLAN 1和VLAN 10）</p><p>​        switchport trunk allowed vlan except 11-20 （不允许VLAN 11到VLAN 20）</p></li><li><p>65：set trunk 1/24 on dotlq（封装模式为<strong>802.1Q</strong>）</p><p>​          set trunk  1/24 vlan 11-20 （允许）</p><p>​            clear trunk  1/24 vlan 11-20 （不允许）</p></li></ul></li></ul></li><li><p><strong>交换机VTP的设置</strong></p><ul><li>server：维护该VTP域中所有的VLAN信息列表，可建立、删除或修改VLAN</li><li>client：信息只能从server学习到，不能建立、删除或修改VLAN</li><li>transparent：相当于一个独立的交换机，只能建立、删除或修改VLAN</li></ul></li></ul><h2 id="7、路由器及其配置"><a href="#7、路由器及其配置" class="headerlink" title="7、路由器及其配置"></a>7、路由器及其配置</h2><ul><li><p>存储器：</p><ul><li>Flash 主要用于存储当前使用的<strong>操作系统映像</strong>文件和微代码</li><li>NVRAM 主要存储<strong>启动配置文件</strong>或<strong>备份配置</strong>文件</li><li>RAM 主要存储路由表、快速交换缓存、ARP 缓存、数据分组缓冲区和缓冲队列、运行配置文件等</li><li>ROM 主要用来永久保存路由器的<strong>开机诊断程序</strong>、<strong>引导程序</strong>和操作系统软件</li></ul></li><li><p>路由表：</p><ul><li>C：直连，0</li><li>S：静态，1</li><li>I：IGRP，100</li><li>O：OSPF，<strong>110</strong></li><li>B： <strong>200</strong></li></ul></li><li><p>via+目的IP地址</p></li><li><p><strong>0.0.0.0/0</strong></p></li><li><p><img src="/deven/%E9%80%89%E6%8B%A9%E9%A2%98.assets/image-20210922103705680.png" alt="image-20210922103705680"></p></li><li><p>RIP协议衡量路由信息好坏的依据是跳数（从自身开始抵达目的地所需要经过的路由器个数）；每隔30s向外广播一次路由表；<strong>最大跳数15次</strong>，16次即网络不可达；默认AD值120；可以使用passive-interface命令配置被动接口，被动接口将不会向外发送路由信息。</p></li><li><p>access-list</p><ul><li>deny 在permit前</li><li>协议在any前</li><li>ip access-list允许用名字但access-list不行</li><li><strong>标准1-99</strong>，1300-1999</li><li><strong>扩展100-199</strong>，2000-2699</li><li>access list ACL_ID permit或deny 源IP  <strong>反掩码</strong></li></ul></li><li><p>weite memory 保存在<strong>NVRAM</strong>中</p></li><li><p>执行ip route命令需进入<strong>全局配置模式</strong></p></li><li><p><strong>查看</strong>配置信息需<strong>特权</strong>模式</p></li><li><p>当路由表包含多种路由信息，会选择<strong>connected</strong></p></li></ul><h2 id="8、无线局域网设备安装与调试"><a href="#8、无线局域网设备安装与调试" class="headerlink" title="8、无线局域网设备安装与调试"></a>8、无线局域网设备安装与调试</h2><ul><li><p>配置接入点之前，需要从管理员处获取的信息如下：</p><pre><code>1、系统名称2、SSID3、如果没有连接到DHCP，则需为接入点指定一个唯一的IP地址4、接入点与PC不在同一子网内的话，需要子网掩码和默认网关5、SNMP集合名称以及相关文件属性。</code></pre></li><li><p>蓝牙</p><ul><li><p>ISM频段2.402~2.480GHz</p></li><li><p>**异步： ** <strong>非对称</strong> 733.2kbit/s    /       57.6kbit/s</p><p>​              <strong>对称</strong>   433.9kbit/s</p></li><li><p><strong>同步</strong> : 64kbit/s、跳频 1600次/s</p></li><li><p>1mW（1~10m），100mW（100m）</p></li></ul></li><li><p>HiperLAN</p><ul><li>采用<strong>5G</strong>的射频频率</li><li>HiperLAN/1上行20Mbit/s，HiperLAN/2（3G标准）上行<strong>54M</strong>bit/s</li><li>室内30m，室外150m</li><li>面向连接，采用OFDM调制技术</li></ul></li><li><p>802.11标准</p><p>   <img src="C:\Users\Deng\AppData\Roaming\Typora\typora-user-images\image-20210907093845837.png" alt="image-20210907093845837"></p><ul><li>点对点：只需要<strong>无线网卡</strong>，<strong>256</strong>台PC</li><li>基本模式：无线接入点，1024台PC</li><li>无线网桥：<strong>连接两个局域网</strong>并保持其在同一网段</li><li>无线路由器：可建立局域网，有<strong>NAT</strong>功能</li><li>对等将无线局域网与有线局域网相连方法是在其中一台计算机上再安装一块以太网网卡</li></ul></li><li><p>安装无线接入点</p><ul><li><p>线内供电：</p></li><li><p>本地电源：</p><p>1.连接以太网接口</p><p>2.电源接入“48V DC”接口</p><p>3.电源模块另一端接到AC 100~250V电源插座</p></li></ul></li><li><p>配置无线接入点</p><ul><li>第一次一般采用本地配置方式</li><li>默认IP 10.0.0.1，PC机可分配到10.0.0.X</li><li>使用双绞线连接</li><li>浏览器访问10.0.0.1，出现登录对话框</li><li>用户名为空，密码为Cisco</li><li>单机“Express Setup”进入快速配置页面</li></ul></li></ul><p><img src="C:\Users\Deng\AppData\Roaming\Typora\typora-user-images\image-20210907095048155.png" alt="image-20210907095048155"></p><p><img src="C:\Users\Deng\AppData\Roaming\Typora\typora-user-images\image-20210907095101337.png" alt="image-20210907095101337"></p><h2 id="9、计算机网络信息服务系统的安装与配置"><a href="#9、计算机网络信息服务系统的安装与配置" class="headerlink" title="9、计算机网络信息服务系统的安装与配置"></a>9、计算机网络信息服务系统的安装与配置</h2><ul><li>配置FTP服务器。<pre><code>1、默认没有管理员密码。2、创建域时需要配置**IP地址**（用户只能通过该IP地址访问FTP服务器，为空则意味服务器的所有IP地址）、**域名**（仅是用于对服务器的描述的名字，不是真正的域名）、**端口号**、**域存储位置**（低于500用.ini文件，高于500用注册表）。3、用户管理中，只允许由管理员添加新用户，添加用户后才能被客户端访问，用户包括匿名用户（**用户名anonymous，密码为空**）和命名用户，密码长度最多8字符。4、常用选项中，勾选拦截“FTP BOUNCE” 和FXP，则不允许在两个FTP服务器间传输文件。不允许用户自行注册。</code></pre></li><li>配置FTP服务器。<pre><code>1、通常来说，除DHCP必须是静态IP外，其余服务器要求IP地址不变，可以用静态IP也可以通过DHCP的保留地址来配置，而动态分配的IP地址则是每次申请到的IP可能会不同。2、**添加**用户后才能被客户端访问，用户包括匿名用户（**用户名anonymous，密码为空**）和命名用户，密码长度最多8字符。3、创建域时需要配置IP地址、域名、端口号、域存储位置（低于500用.ini文件，高于500用注册表）。4、限制（不允许）某些IP地址能否访问FTP服务器可以通过设置IP访问来实现。</code></pre></li><li>配置E-mail服务器。<pre><code>1、Winmail支持web和客户端两种方式。2、邮件管理工具包括系统设置、域名设置、用户合租、系统状态、系统日志等。3、系统设置可以对邮件服务器的系统参数进行设置，例如SMTP、邮件过滤、管理员密码等。4、**域名设置**可以对域进行新建（用于构建虚拟邮件服务器）、删除、修改，例如**是否允许**在本域中自行注册新用户。5、建立邮件路由，需要在DNS服务器里建立邮件服务器主机记录和邮件交换器记录增加新的域，看字面理解就能知道那是域名设置的工作范畴。</code></pre></li><li>配置E-mail服务器。<pre><code>1、Winmail的邮箱可以在服务器端由管理员创建，**也可以由用户自行注册**。2、邮件保存在收件人的信箱中。3、**IMAP和POP3**协议是用于收邮件的，发邮件用的是SMTP。4、建立邮件路由时，需要在DNS服务器里建立邮件服务器主机记录和邮件交换器记录</code></pre></li><li>配置DNS服务器。<pre><code>DNS中的正向查找区域负责查找某域名所对应的IP地址，而DNS服务器的测试可以使用**nslookup**（**正向反向均可测试**）和ping（只能测试正向），当解析出对应的内容后即代表解析成功。</code></pre>​    DNS 服务器中的<strong>根服务器</strong>被<strong>自动</strong>加入到系统中，<strong>不需</strong>管理员手工配置</li><li>配置WWW服务器。<pre><code>1、主目录的访问权限在主目录选项中进行设置。2、网站选项可设置网站的标识和连接限制。3、主目录选项卡中，可以设置用于存放网页的文件路径。4、性能选项可设置影响带宽使用的属性及客户端连接的数量。</code></pre><ul><li>Web 站点可以配置<strong>静态</strong>和<strong>动态</strong> IP 地址</li><li>访问 Web 站点时可以使用站点的<strong>域名</strong>或站点的 <strong>IP 地址</strong></li><li>建立 Web 站点时<strong>必须</strong>为该站点指定一个主目录好，<strong>也可以是虚拟的子目录</strong></li><li>Web 站点的性能选项包括影响带宽使用的属性和客户端 Web 连接的数量</li><li>在 Web 站点的<strong>主目录选项卡</strong>中，可配置主目录的读取和写入等权限</li></ul></li><li>配置WWW服务器。<pre><code>网站选项可以设置的内容包括：描述、IP地址、TCP端口、连接超时时间、是否启用日志记录。网络连接数量是性能选项中的。</code></pre></li><li>DHCP相关命令：<pre><code>查看DHCP信息--ipconfig  /all释放地址租约--ipconfig  /release重新获取地址租约--ipconfig  /renew</code></pre><ul><li>添加<strong>保留时需</strong>在 DHCP 客户机上获得其 <strong>MAC 地址</strong>信息（添加排除时不需从客户端获得 MAC 地址）</li><li>不添加排除和保留时，服务器可将地址池内的 IP 地址动态指派给 DHCP 客户机</li><li>地址池是作用域应用排除范围之后剩余的 IP 地址</li><li>保留是指确保 DHCP 客户端永远可以得到同一 IP 地址，客户端可以释放该租约</li><li>收到非中继转发的“DHCP发现”消息时,选择收到该消息的子网所处的网段分配 IP 地址</li></ul></li></ul><h2 id="10、网络安全技术"><a href="#10、网络安全技术" class="headerlink" title="10、网络安全技术"></a>10、网络安全技术</h2><ul><li><strong>outside</strong>(0),<strong>inside</strong>(100),<strong>DMZ</strong>(50)</li><li>系统的数据通信端口是可配置的</li><li>PIX分为四种访问模式：非特权模式（其实就是用户模式）、特权模式（用户模式下输入enable后进入）、配置模式（特权模式下输入configure terminal进入，绝大多数系统配置都在这里做）以及<strong>监视模式</strong>（可以进行操作系统映像更新和口令恢复）。</li><li><strong>RSA、DSA、ECC非对称</strong>** (<strong>2n</strong>)、<strong>DES、IDEA、RC2、Skipjack对称</strong>（*<em>n</em>(n-1)**）</li><li>IPS具备<strong>嗅探</strong>功能</li><li><strong>对等式</strong>能够真正避免单点故障</li><li>应用入侵防护系统可以阻挡多种入侵，例如cookie篡改、SQL代码嵌入、参数篡改、缓冲器溢出、强制浏览等等（就是说基于网络的和基于主机的难于阻断）。</li><li> 基于网络的入侵检测系统通常采用混杂模式，采用的技术包括：模式匹配、频率或阈值、事件的相关性、统计意义上的非正常现象检测。</li><li><strong>误报</strong>（不是漏报）</li></ul><ul><li><strong>网络攻击</strong><ul><li>DDos 攻击：利用已经攻占的多个系统向目标攻击，被害设备面对<strong>大量请求</strong>无法正常处理而<strong>拒绝服务</strong></li><li>SYN Flooding 攻击：利用 TCP <strong>三次握手</strong>过程，使受害主机处于会话请求之中，直至连接超时停止响应</li><li>SQL 注入攻击：属于利用系统漏洞，防火墙（<strong>基于网络的防护系统）无法阻断</strong></li><li>Land攻击：向某个设备发送数据包，并将数据包的源 IP 地址和目的地址都设置成<strong>攻击目标</strong>的地址</li><li><strong>基于网络的防护系统也无法阻断 Cookie篡改 和 DNS欺骗</strong></li><li>Tear doop 、Smurf 攻击可以被路由器阻止</li></ul></li></ul><h2 id="11、网络管理技术"><a href="#11、网络管理技术" class="headerlink" title="11、网络管理技术"></a>11、网络管理技术</h2><ul><li>网络管理命令。<pre><code>nbtstat -a--使用远程计算机的名称列出名称表nslookup--用于正向和反向的DNS解析**netstat** -a--显示所有连接和侦听端口net view--显示域列表、计算机列表或指定计算机上共享资源的列表</code></pre></li><li>ICMP消息类型<ul><li>3：目标不可达</li><li>4：源抑制</li><li>5：重定向</li><li>11：超时</li></ul></li><li> 管理站使用udp端口（整个snmp都基于<strong>UDP</strong>协议而非TCP，默认162）</li><li>如果指定当一个接口断开或连接时向管理站发出通知，那么在该接口的配置模式下正确的配置命令是snmp trap link-status。</li><li>用于<strong>显示域列表</strong>、计算机列表的命令是<strong>net view</strong>    </li></ul><ul><li><p>sniffer抓包</p><ul><li>问在某路由器上，最多还可链接的路由器数量是多少。如果所在子网掩码是 /29 就填 3，是 /28 就填 <strong>11</strong>。</li><li>问串接一种设备能监听路由器之间的流量，写 <strong>TAP</strong></li><li>问串接一种设备能提供安全保护，一般是 <strong>IPS</strong></li><li>问防火墙访问外网设置，分别填 <strong>nat</strong> 和 <strong>global</strong></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NCRE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于V4L2的简易监控系统</title>
      <link href="/archives/3a48b421.html"/>
      <url>/archives/3a48b421.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>参考了一些文章如下：</p><p>V4L2相关：<a href="https://note.youdao.com/ynoteshare1/index.html?id=0d5f9f214e90e1381414a264cc143261&type=note">点击跳转</a></p><p>其它文章：</p><p>​    <a href="https://blog.csdn.net/sunny_hu92/article/details/79985660?ops_request_misc=%7B%22request_id%22:%22162488007816780261988402%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=162488007816780261988402&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-5-79985660.first_rank_v2_pc_rank_v29_1&utm_term=VIDIOC_S_CROP:+Inappropriate+ioctl+for+device&spm=1018.2226.3001.4187">Qt—Linux平台Qt5用V4L2读取摄像头，实现实时画面和拍照</a></p><p>​    <a href="https://blog.csdn.net/qq_32417149/article/details/101515448?utm_medium=distribute.pc_relevant_download.none-task-blog-2~default~BlogCommendFromBaidu~default-3.test_version_3&depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-2~default~BlogCommendFromBaidu~default-3.test_version_">V4L2+Qt5实现摄像头视频采集以及参数控制（源码学习版）_虾米小小小的博客-CSDN博客</a></p></blockquote><h2 id="一、项目功能简介"><a href="#一、项目功能简介" class="headerlink" title="一、项目功能简介"></a>一、项目功能简介</h2><ul><li><p>监控画面显示及暂停</p></li><li><p>画面录制</p></li><li><p>录制视频回放</p></li><li><p>录制文件以时间段为名保存</p></li></ul><h2 id="二、界面展示"><a href="#二、界面展示" class="headerlink" title="二、界面展示"></a>二、界面展示</h2><p><img src="https://cdn.jsdelivr.net/gh/pingden/mypic/img/%E7%95%8C%E9%9D%A2%E5%B1%95%E7%A4%BA.png" alt="界面展示"></p><h2 id="三、项目实现"><a href="#三、项目实现" class="headerlink" title="三、项目实现"></a>三、项目实现</h2><h3 id="1、整体流程"><a href="#1、整体流程" class="headerlink" title="1、整体流程"></a>1、整体流程</h3><p><img src="https://cdn.jsdelivr.net/gh/pingden/mypic/img/image-20211203162412813.png" alt="image-20211203162412813"></p><h3 id="2、功能实现"><a href="#2、功能实现" class="headerlink" title="2、功能实现"></a>2、功能实现</h3><blockquote><p>这里只展示了部分代码，完整代码请到最下方的链接下载</p></blockquote><h4 id="标志信息"><a href="#标志信息" class="headerlink" title="标志信息"></a>标志信息</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> stop_flag;             <span class="comment">//用于标志是否暂停</span></span><br><span class="line"><span class="keyword">bool</span> record_flag;           <span class="comment">//用于标志是否正在录制</span></span><br><span class="line"><span class="keyword">bool</span> replay_flag;           <span class="comment">//用于标志是否正在回放</span></span><br><span class="line">FILE *fp,*fp_replay;        <span class="comment">//文件指针，分别指向当前正在录制的视频文件和当前正在回放的视频文件</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> pic[<span class="number">153600</span>];  <span class="comment">//用于保存从文件中读取的信息</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *display;    <span class="comment">//中间变量</span></span><br><span class="line"><span class="keyword">int</span> count;                <span class="comment">//用于分频</span></span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">replay_pp = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">320</span> * <span class="number">240</span><span class="comment">/*QWidget::width()*QWidget::height()*/</span>* <span class="number">3</span> * <span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span>));</span><br><span class="line">v = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">153600</span>);</span><br><span class="line">replay_frame = <span class="keyword">new</span> <span class="built_in">QImage</span>(pp,<span class="number">320</span>,<span class="number">240</span>,QImage::Format_RGB888);</span><br><span class="line"></span><br><span class="line">pp = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">320</span> * <span class="number">240</span><span class="comment">/*QWidget::width()*QWidget::height()*/</span>* <span class="number">3</span> * <span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span>));</span><br><span class="line">painter = <span class="keyword">new</span> <span class="built_in">QPainter</span>(<span class="keyword">this</span>);</span><br><span class="line">frame = <span class="keyword">new</span> <span class="built_in">QImage</span>(pp,<span class="number">320</span>,<span class="number">240</span>,QImage::Format_RGB888);</span><br><span class="line">stop_flag = <span class="literal">false</span>;</span><br><span class="line">record_flag = <span class="literal">false</span>;</span><br><span class="line">replay_flag = <span class="literal">false</span>;</span><br><span class="line">fp = <span class="literal">NULL</span>;</span><br><span class="line">label = <span class="keyword">new</span> <span class="built_in">QLabel</span>();</span><br><span class="line">btn_stop = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="keyword">this</span>);</span><br><span class="line">btn_replay = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="keyword">this</span>);</span><br><span class="line">btn_record = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="keyword">this</span>);</span><br><span class="line">vd = <span class="keyword">new</span> <span class="built_in">VideoDevice</span>(<span class="built_in">tr</span>(<span class="string">&quot;/dev/video0&quot;</span>));</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">connect</span>(vd, <span class="built_in">SIGNAL</span>(<span class="built_in">display_error</span>(QString)), <span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">display_error</span>(QString)));</span><br><span class="line">rs = vd-&gt;<span class="built_in">open_device</span>();</span><br></pre></td></tr></table></figure><h4 id="停止功能"><a href="#停止功能" class="headerlink" title="停止功能"></a>停止功能</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessImage::on_btn_stop_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;on_btn_stop_clicked&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(!stop_flag)</span><br><span class="line">    &#123;</span><br><span class="line">        stop_flag = <span class="literal">true</span>;</span><br><span class="line">        btn_stop-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Display&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        stop_flag = <span class="literal">false</span>;</span><br><span class="line">        btn_stop-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Stop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="录制功能"><a href="#录制功能" class="headerlink" title="录制功能"></a>录制功能</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessImage::on_btn_record_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;on_btn_record_clicked&quot;</span>;</span><br><span class="line">    <span class="built_in">gettimeofday</span>(&amp;tv,<span class="literal">NULL</span>);<span class="comment">//获取1970-1-1到现在的时间结果保存到tv中</span></span><br><span class="line">    sec=tv.tv_sec;</span><br><span class="line">    min=tv.tv_sec/<span class="number">60</span>;</span><br><span class="line">    <span class="built_in">localtime_r</span>((<span class="keyword">time_t</span>*)&amp;sec,&amp;cur_tm);</span><br><span class="line">    <span class="built_in">snprintf</span>(cur_time,<span class="number">20</span>,<span class="string">&quot;%d.%02d.%02d %02d:%02d:%02d&quot;</span>,cur_tm.tm_year+<span class="number">1900</span>,cur_tm.tm_mon+<span class="number">1</span>,cur_tm.tm_mday,cur_tm.tm_hour,cur_tm.tm_min,cur_tm.tm_sec);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!record_flag)</span><br><span class="line">    &#123;</span><br><span class="line">       fp = <span class="built_in">fopen</span>(<span class="string">&quot;/record_buf.yuv&quot;</span>,<span class="string">&quot;wb+&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span>(fp != <span class="literal">NULL</span>)&#123;<span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;fp open success&quot;</span>;&#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;<span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;fp open fail&quot;</span>;&#125;</span><br><span class="line">       str1 = QString::<span class="built_in">fromLocal8Bit</span>(cur_time);</span><br><span class="line">       <span class="built_in">qDebug</span>()&lt;&lt;str1;</span><br><span class="line">       record_flag = <span class="literal">true</span>;</span><br><span class="line">       btn_record-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Stop_record&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fp != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fclose</span>(fp);</span><br><span class="line">            <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;fp closed&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        str2= QString::<span class="built_in">fromLocal8Bit</span>(cur_time);</span><br><span class="line">        <span class="built_in">qDebug</span>()&lt;&lt;str2;</span><br><span class="line">        name = <span class="string">&quot;/&quot;</span>+str1 + <span class="string">&quot;-&quot;</span>+ str2;</span><br><span class="line">        <span class="built_in">qDebug</span>()&lt;&lt;name;</span><br><span class="line">        <span class="built_in">rename</span>(<span class="string">&quot;/record_buf.yuv&quot;</span>,name.<span class="built_in">toLocal8Bit</span>());</span><br><span class="line">        record_flag = <span class="literal">false</span>;</span><br><span class="line">        btn_record-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Record&quot;</span>);</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="回放功能"><a href="#回放功能" class="headerlink" title="回放功能"></a>回放功能</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessImage::on_btn_replay_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;on_btn_replay_clicked&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(!replay_flag)</span><br><span class="line">    &#123;</span><br><span class="line">        fp_replay = <span class="built_in">fopen</span>(name.<span class="built_in">toLocal8Bit</span>(),<span class="string">&quot;rb+&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(fp_replay != <span class="literal">NULL</span>)&#123;<span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;fp_replay open success&quot;</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;fp_replay open fail&quot;</span>;&#125;</span><br><span class="line">        replay_flag = <span class="literal">true</span>;</span><br><span class="line">        btn_replay-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Over_replay&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fp_replay != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fclose</span>(fp_replay);</span><br><span class="line">            <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;fp_replay open fail&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        btn_replay-&gt;<span class="built_in">setText</span>(<span class="string">&quot;Replay&quot;</span>);</span><br><span class="line">        replay_flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="图像获取与刷新"><a href="#图像获取与刷新" class="headerlink" title="图像获取与刷新"></a>图像获取与刷新</h4><blockquote><p>这里值得一提的是，下方代码的分频系数（5）可以用一个变量来替换，再加上一个按钮来控制这个变量的值，这样就可以实现回放视频的加速减速了。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessImage::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!stop_flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(replay_flag)</span><br><span class="line">        &#123;</span><br><span class="line">            count ++;</span><br><span class="line">            <span class="keyword">if</span>(count == <span class="number">5</span>)                  <span class="comment">//分频</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">fread</span>(pic,<span class="number">1</span>,<span class="number">153600</span>,fp_replay)&gt;=<span class="number">153600</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    display = pic;                </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;Read over&quot;</span>;</span><br><span class="line">                    <span class="built_in">rewind</span>(fp_replay);</span><br><span class="line">                &#125;</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;          </span><br><span class="line">                rs = vd-&gt;<span class="built_in">get_frame</span>((<span class="keyword">void</span> **)&amp;p,(<span class="keyword">size_t</span> *)&amp;len);</span><br><span class="line">                <span class="keyword">if</span>(record_flag)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;Recording&quot;</span>;</span><br><span class="line">                    <span class="built_in">fwrite</span>(p,<span class="number">153600</span>,<span class="number">1</span>,fp);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">qDebug</span>()&lt;&lt;<span class="string">&quot;Displaying&quot;</span>;</span><br><span class="line">                display = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)p;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!replay_flag || count == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">convert_yuv_to_rgb_buffer</span>(display,pp,<span class="number">320</span>,<span class="number">240</span><span class="comment">/*QWidget::width(),QWidget::height()*/</span>);</span><br><span class="line">            frame-&gt;<span class="built_in">loadFromData</span>((uchar *)pp,<span class="comment">/*len*/</span><span class="number">320</span> * <span class="number">240</span> * <span class="number">3</span> * <span class="built_in"><span class="keyword">sizeof</span></span>(<span class="keyword">char</span>));</span><br><span class="line">            label-&gt;<span class="built_in">setPixmap</span>(QPixmap::<span class="built_in">fromImage</span>(*frame,Qt::AutoColor));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!replay_flag)</span><br><span class="line">      &#123;</span><br><span class="line">          rs = vd-&gt;<span class="built_in">unget_frame</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>需要注意的一点是该程序在虚拟机上运行存在一点问题，无法正常运行，但在开发板上可以正常运行。有问题可以在评论区留言，最后在这里留下源代码下载地址</p><p>链接：<a href="https://pan.baidu.com/s/1_E1sUcUqxjIg5E-kyeMbVg">https://pan.baidu.com/s/1_E1sUcUqxjIg5E-kyeMbVg</a><br>提取码：v4l2</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V4L2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32+ESP8266远程控制LED</title>
      <link href="/archives/8f5a4920.html"/>
      <url>/archives/8f5a4920.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、硬件连接"><a href="#一、硬件连接" class="headerlink" title="一、硬件连接"></a>一、硬件连接</h1><table><thead><tr><th align="center">ESP8266</th><th align="center">STM32</th></tr></thead><tbody><tr><td align="center">3V3</td><td align="center">3.3</td></tr><tr><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">RX</td><td align="center">PB10</td></tr><tr><td align="center">TX</td><td align="center">PB11</td></tr></tbody></table><p>然后STM32f103C8T6核心板自带了一个LED接的是PB13引脚。<br><img src="https://img-blog.csdnimg.cn/2021060110363533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUwNTI3NjM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这里值得一提的是，刚开始我把ESP8266的3V3引脚接到了USB转TTL的3V3上，用串口调试助手没反应，后来发现是供电的问题，换到STLINK的3.3V上就好了。<br><img src="https://img-blog.csdnimg.cn/20210601103740666.png" alt="在这里插入图片描述"></p><h1 id="二、云平台"><a href="#二、云平台" class="headerlink" title="二、云平台"></a>二、云平台</h1><p>想要实现远程控制，需要一个数据转发的过程，所以，我们需要云平台来给我们转发数据。这里推荐一个物联平台： <a href="http://www.doit.am/">http://www.doit.am/</a></p><p>将手机以及其他设备（如ESP8266）接入云平台后，它们之间就可以进行远程通信了。</p><p>获取IP地址和端口号<a href="http://tcp.doit.am/">http://tcp.doit.am/</a>，这个IP和端口号在后面的软件配置里需要用到<br>点进去之后是这样的<br><img src="https://img-blog.csdnimg.cn/2021060310470620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUwNTI3NjM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="三、软件配置"><a href="#三、软件配置" class="headerlink" title="三、软件配置"></a>三、软件配置</h1><h2 id="1、LED的配置"><a href="#1、LED的配置" class="headerlink" title="1、LED的配置"></a>1、LED的配置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//LED初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE); <span class="comment">//使能PC端口时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13; <span class="comment">//LED0--&gt;PB.5 端口配置</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; <span class="comment">//IO口速度为50MHz</span></span><br><span class="line">GPIO_Init(GPIOC, &amp;GPIO_InitStructure); <span class="comment">//根据设定参数初始化GPIOC13</span></span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOC,GPIO_Pin_13); <span class="comment">//PC13 输出高</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、串口3的配置"><a href="#2、串口3的配置" class="headerlink" title="2、串口3的配置"></a>2、串口3的配置</h2><p>因为我们需要串口1来调试代码，所以用STM32的串口3也就是PB10、PB11与ESP8266连接，下面是串口3的配置代码以接收中断服务函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//串口接收缓存区 </span></span><br><span class="line">u8 USART3_RX_BUF[USART3_MAX_RECV_LEN]; <span class="comment">//接收缓冲,最大USART3_MAX_RECV_LEN个字节.</span></span><br><span class="line">u8  USART3_TX_BUF[USART3_MAX_SEND_LEN]; <span class="comment">//发送缓冲,最大USART3_MAX_SEND_LEN字节</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收到的数据状态</span></span><br><span class="line"><span class="comment">//[15]:0,没有接收到数据;1,接收到了一批数据.</span></span><br><span class="line"><span class="comment">//[14:0]:接收到的数据长度</span></span><br><span class="line">vu16 USART3_RX_STA=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口3接收中断服务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">USART3_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 res;</span><br><span class="line"><span class="keyword">if</span>(USART_GetITStatus(USART3, USART_IT_RXNE) != RESET)<span class="comment">//接收到数据</span></span><br><span class="line">&#123;</span><br><span class="line">res =USART_ReceiveData(USART3);</span><br><span class="line">USART_SendData(DEBUG_USARTx,res);    <span class="comment">//这里是把ESP8266发送到串口3的消息发送到电脑端串口调试助手，便于调试</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span>(res != <span class="string">&#x27;A&#x27;</span>)                     <span class="comment">//以‘A’为结束位，收到‘A’表示一次接收消息完成</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((USART3_RX_STA&amp;(<span class="number">1</span>&lt;&lt;<span class="number">15</span>))==<span class="number">0</span>)<span class="comment">//接收完的一批数据,还没有被处理,则不再接收其他数据</span></span><br><span class="line">&#123; </span><br><span class="line">USART3_RX_BUF[USART3_RX_STA++]=res;<span class="comment">//记录接收到的值 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">USART3_RX_STA|=<span class="number">1</span>&lt;&lt;<span class="number">15</span>;<span class="comment">//没有收到结束符‘A’，收到的字节数&gt;=0x80,强制标记接收完成</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">USART3_RX_STA|=<span class="number">1</span>&lt;&lt;<span class="number">15</span>;<span class="comment">//接收消息完成</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化IO 串口3</span></span><br><span class="line"><span class="comment">//pclk1:PCLK1时钟频率(Mhz)</span></span><br><span class="line"><span class="comment">//bound:波特率  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">usart3_init</span><span class="params">(u32 bound)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="comment">// GPIOB时钟</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3,ENABLE); <span class="comment">//串口3时钟使能</span></span><br><span class="line"></span><br><span class="line"> USART_DeInit(USART3);  <span class="comment">//复位串口3</span></span><br><span class="line"> <span class="comment">//USART3_TX   </span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10; <span class="comment">//PB10</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;<span class="comment">//复用推挽输出</span></span><br><span class="line">  GPIO_Init(GPIOB, &amp;GPIO_InitStructure); <span class="comment">//初始化PB10</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment">//USART3_RX  </span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;<span class="comment">//浮空输入</span></span><br><span class="line">  GPIO_Init(GPIOB, &amp;GPIO_InitStructure);  <span class="comment">//初始化PB11</span></span><br><span class="line"></span><br><span class="line">USART_InitStructure.USART_BaudRate = bound;<span class="comment">//波特率一般设置为9600;</span></span><br><span class="line">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class="comment">//字长为8位数据格式</span></span><br><span class="line">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class="comment">//一个停止位</span></span><br><span class="line">USART_InitStructure.USART_Parity = USART_Parity_No;<span class="comment">//无奇偶校验位</span></span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;<span class="comment">//无硬件数据流控制</span></span><br><span class="line">USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;<span class="comment">//收发模式</span></span><br><span class="line">  </span><br><span class="line">USART_Init(USART3, &amp;USART_InitStructure); <span class="comment">//初始化串口3</span></span><br><span class="line">  </span><br><span class="line">USART_Cmd(USART3, ENABLE);                    <span class="comment">//使能串口 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使能接收中断</span></span><br><span class="line">  USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);<span class="comment">//开启中断   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置中断优先级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = USART3_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=<span class="number">2</span> ;<span class="comment">//抢占优先级3</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;<span class="comment">//子优先级3</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//IRQ通道使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);<span class="comment">//根据指定的参数初始化VIC寄存器</span></span><br><span class="line"></span><br><span class="line">USART3_RX_STA=<span class="number">0</span>;<span class="comment">//清零</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口3,printf 函数</span></span><br><span class="line"><span class="comment">//确保一次发送数据不超过USART3_MAX_SEND_LEN字节</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u3_printf</span><span class="params">(<span class="keyword">char</span>* fmt,...)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">u16 i,j; </span><br><span class="line">va_list ap; </span><br><span class="line">va_start(ap,fmt);</span><br><span class="line"><span class="built_in">vsprintf</span>((<span class="keyword">char</span>*)USART3_TX_BUF,fmt,ap);</span><br><span class="line">va_end(ap);</span><br><span class="line">i=<span class="built_in">strlen</span>((<span class="keyword">const</span> <span class="keyword">char</span>*)USART3_TX_BUF);<span class="comment">//此次发送数据的长度</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)<span class="comment">//循环发送数据</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(USART_GetFlagStatus(USART3,USART_FLAG_TC)==RESET); <span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">USART_SendData(USART3,USART3_TX_BUF[j]); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、ESP8266的配置"><a href="#3、ESP8266的配置" class="headerlink" title="3、ESP8266的配置"></a>3、ESP8266的配置</h2><p>这里需要注意的是，因为要发送 “ ，所以要加上转义字符 \ </p><p>这里的IP地址与端口号填我们在云平台获取的，每发送一条命令都需要延时等待一下，可以按情况更改</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a[]=<span class="string">&quot;AT+CWMODE=1&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> b[]=<span class="string">&quot;AT+RST&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> c[]=<span class="string">&quot;AT+CWJAP=\&quot;WIFI名称\&quot;,\&quot;WIFI密码\&quot;&quot;</span>;                </span><br><span class="line"><span class="keyword">char</span> d[]=<span class="string">&quot;AT+CIPMUX=1&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> e[]=<span class="string">&quot;AT+CIPSTART=0,\&quot;TCP\&quot;,\&quot;IP地址\&quot;,端口号&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_s</span><span class="params">(<span class="keyword">int</span> sec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sec;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">esp8266_start_trans</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//设置工作模式 1：station模式   2：AP模式  3：兼容 AP+station模式</span></span><br><span class="line">esp8266_send_cmd1((u8 *)a);</span><br><span class="line">delay_s(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//重启</span></span><br><span class="line">esp8266_send_cmd1((u8 *)b);</span><br><span class="line">delay_s(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接WIFI</span></span><br><span class="line">esp8266_send_cmd1((u8 *)c);</span><br><span class="line">  delay_s(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">esp8266_send_cmd1((u8 *)d);</span><br><span class="line"> delay_s(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接TCP服务端</span></span><br><span class="line">esp8266_send_cmd1((u8 *)e);</span><br><span class="line">    delay_s(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">esp8266_send_cmd1</span><span class="params">(u8 *cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u3_printf(<span class="string">&quot;%s\r\n&quot;</span>,cmd);<span class="comment">//发送命令，需要加换行符</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="4、main函数"><a href="#4、main函数" class="headerlink" title="4、main函数"></a>4、main函数</h2><p>收到”on”开灯，收到”off”灭灯</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  USART_Config();</span><br><span class="line">delay_init();</span><br><span class="line">LED_Init();</span><br><span class="line"></span><br><span class="line">usart3_init(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">esp8266_start_trans();</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;初始化完成\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">USART3_RX_STA=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(USART3_RX_STA&amp;<span class="number">0x8000</span>)   <span class="comment">//如果消息接收完成，则处理</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>((<span class="keyword">const</span> <span class="keyword">char</span>*)USART3_RX_BUF,<span class="string">&quot;on&quot;</span>))  <span class="comment">//这里是看接收到的消息中有没有自己设置的命令“on”，strstr()函数不会用的可以搜一下</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOC,GPIO_Pin_13);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>((<span class="keyword">const</span> <span class="keyword">char</span>*)USART3_RX_BUF,<span class="string">&quot;off&quot;</span>)) </span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOC,GPIO_Pin_13);</span><br><span class="line">&#125;</span><br><span class="line">USART3_RX_STA=<span class="number">0</span>;    <span class="comment">//消息处理完成，开始重新接收</span></span><br><span class="line"><span class="built_in">memset</span>(USART3_RX_BUF,<span class="number">0</span>,<span class="number">600</span>);         <span class="comment">//将接收区清0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、测试"><a href="#四、测试" class="headerlink" title="四、测试"></a>四、测试</h1><p>打开电脑串口调试助手，用手机或电脑网络调试助手连接云平台，发送命令，记得加上结束符’A’，现象如下，同时LED的亮灭情况也随命令变化</p><p>手机端我用的是自己写的APP<br>![在这里插入图片描述](<a href="https://img-blog.csdnimg.cn/20210603223725797.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUwNTI3NjM1,size_16,color_FFFFFF,t_70#pic_center">https://img-blog.csdnimg.cn/20210603223725797.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUwNTI3NjM1,size_16,color_FFFFFF,t_70#pic_center</a> =300x533)</p><p>电脑串口调试助手<br><img src="https://img-blog.csdnimg.cn/2021060322371510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUwNTI3NjM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>LED的变化我就不贴出来了</p><p>最后把我的工程文件以及APP分享出来，需要的自取，链接：<a href="https://pan.baidu.com/s/1cd3nMlHz6UTnPx74tv3TVA">https://pan.baidu.com/s/1cd3nMlHz6UTnPx74tv3TVA </a><br>提取码：0k0c </p>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
